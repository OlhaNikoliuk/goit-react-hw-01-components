{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.module.css","components/FriendList/FriendList.module.css","components/App/App.module.css","components/Container/Container.jsx","components/Profile/Profile.jsx","utils/randomColorGenerator.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","Profile","avatarUrl","name","tag","location","stats","profile","description","src","alt","avatar","info","statsItem","label","quantity","followers","views","likes","getRandomColor","color","i","Math","floor","random","Statistics","title","statistics","statList","map","status","item","style","background","percentage","id","FriendListItem","isOnline","isOffline","width","propType","PropTypes","string","bool","FriendList","friends","friendList","friend","isRequired","TransactionHistory","items","transactionHistory","thead","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3441fa30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"info\":\"Profile_info__2NpoZ\",\"stats\":\"Profile_stats__25zJx\",\"statsItem\":\"Profile_statsItem__3NWvo\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1isJt\",\"isOnline\":\"FriendListItem_isOnline__3s3k-\",\"isOffline\":\"FriendListItem_isOffline__3zeXZ\",\"avatar\":\"FriendListItem_avatar__1Coux\",\"name\":\"FriendListItem_name__2FRpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\",\"thead\":\"TransactionHistory_thead__FMJGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1lQQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__aOmNj\",\"App-logo\":\"App_App-logo__1UFaS\",\"App-logo-spin\":\"App_App-logo-spin__3LF-c\",\"App-header\":\"App_App-header__23Gt-\",\"App-link\":\"App_App-link__1ic5L\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nfunction Profile({ avatarUrl, name, tag, location, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatarUrl} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={`${s.name}`}>{name}</p>\n        <p className={`${s.tag} ${s.info}`}>&#64;{tag}</p>\n        <p className={`${s.location} ${s.info}`}>{location}</p>\n      </div>\n\n      <ul className={`${s.stats}`}>\n        <li className={s.statsItem}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}> {stats.followers}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}> {stats.views}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}> {stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatarUrl: PropTypes.string,\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.object,\n};\n\nexport default Profile;\n","function getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// function setRandomColor() {\n//   $(\"#colorpad\").css(\"background-color\", getRandomColor());\n// }\n\nexport default getRandomColor;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport getRandomColor from '../../utils/randomColorGenerator';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(status => (\n          <li\n            key={status.id}\n            className={s.item}\n            style={{ background: getRandomColor() }}\n          >\n            <span className={s.label}>{status.label}</span>\n            <span className={s.percentage}> {status.percentage} &#37;</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className={s.item}>\n      <span className={`${isOnline ? s.isOnline : s.isOffline}`}>\n        {isOnline}\n      </span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propType = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport s from './FriendList.module.css';\n\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propType = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead className={s.thead}>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string,\n      amount: PropTypes.string,\n      currency: PropTypes.string,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","// import logo from './logo.svg';\nimport './App.module.css';\nimport Container from '../Container/Container';\nimport Profile from '../Profile/Profile';\nimport Statistics from '../Statistics/Statistics';\nimport FriendList from '../FriendList/FriendList';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nimport user from '../../data/user.json';\nimport statisticalData from '../../data/statistical-data.json';\nimport friends from '../../data/friends.json';\nimport transactions from '../../data/transactions.json';\n\nfunction App() {\n  return (\n    <div>\n      <Container>\n        <Profile\n          avatarUrl={user.avatar}\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          stats={user.stats}\n        ></Profile>\n\n        <Statistics title=\"Upload stats\" stats={statisticalData}></Statistics>\n\n        <FriendList friends={friends}></FriendList>\n\n        <TransactionHistory items={transactions}></TransactionHistory>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from '../src/components/App/App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}